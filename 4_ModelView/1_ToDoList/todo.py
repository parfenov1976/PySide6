"""
Пример приложения списка дел с использованием архитектуры QT Model/View (специфичного
для PyQt и PySide варианта архитектуры Model View Controller (MVC))
"""

import sys
from MainWindow import Ui_MainWindow  # импорт скомпилированного в питон файла UI из Qt Designer
from PySide6.QtWidgets import QApplication, QMainWindow

"""
Модуль sys нужен для доступа к аргументам командной строки. Если использование аргументов
командной строки не предполагается, то импорт можно не выполнять. При этом, при создании
приложения в класс QApplication([]) в качестве аргумента передается пустой список.
Импорт из модуля PySide6.QtWidgets класса для управления приложением QApplication и
класса основного окна QMainWindow, класса ярлыка QLabel.
"""


class MainWindow(QMainWindow, Ui_MainWindow):
    def __init__(self):
        QMainWindow.__init__(self)  # явный вызов конструктора родительского класса
        # Вызывать конструктор Ui_MainWindow не нужно так как у этого супер-класса его нет
        self.setupUi(self)  # вызов метода сборки интерфейса из модуля главного окна MainWindow


def main() -> None:
    """
    Функция запуска кода приложения верхнего уровня
    :return: None
    """
    app = QApplication(sys.argv)  # создание экземпляра основного цикла событий главного окна приложения
    app.setStyle('Fusion')  # более интересная глобальная кроссплатформенна тема Fusion
    window = MainWindow()  # создание экземпляра класса главного окна приложения
    window.show()  # метод показа главного окна приложения (по умолчанию окно скрыто)
    app.exec()  # запуск основного цикла события главного окна приложения


if __name__ == '__main__':  # конструкция, предотвращающая запуск кода приложения верхнего уровня
    # при импортировании данного файла как модуля
    main()  # вызов функции запуска кода приложения верхнего уровня
