#!/usr/bin/env python3
import sys
from PySide6.QtWidgets import QApplication, QListWidget, QMainWindow

"""
Модуль sys нужен для доступа к аргументам командной строки. Если использование аргументов
командной строки не предполагается, то импорт можно не выполнять. При этом, при создании
приложения в класс QApplication([]) в качестве аргумента передается пустой список.
Импорт из модуля QtWidgets PySide6 класса для управления приложением QApplication и
класса основного окна QMainWindow, класса окна списка QListWidget. 
Другие виджеты можно найти по ссылке https://doc.qt.io/qt-5/widget-classes.html#basic-widget-classes
"""


class MainWidow(QMainWindow):
    """
    Подкласс главного окна приложения
    """

    def __init__(self) -> None:
        """
        Конструктор главного окна приложения
        """
        QMainWindow.__init__(self)  # явный вызов конструктора родительского класса
        self.setWindowTitle('My App')  # присвоение имени главному окну приложения
        self.widget = QListWidget()  # создание экземпляра виджета окна списка
        self.widget.addItems(['One', 'Two', 'Three'])  # создание пунктов списка
        self.widget.currentItemChanged.connect(self.index_changed)  # создание сигнала о смене пункта списка с привязкой
        # ресивера (слота)
        self.widget.currentTextChanged.connect(self.text_changed)  # создание сигнала, передающего текст выбранного
        # элемента списка
        self.setCentralWidget(self.widget)  # размещение виджета окна списка в главном окне приложения

    @staticmethod
    def index_changed(i: object) -> None:
        """
        Ресивер (слот) для сигнала о смене пункта списка.
        :param i: элемент виджета окна списка.
        :return: None
        """
        print(i.text())  # извлечение из объекта пункта списка QListWidgetItem при помощи метода text()
        # текста выбранного пункта списка и его печать

    @staticmethod
    def text_changed(text: str) -> None:
        """
        Ресивер (слот) для сигнала с текстом выбранного пункта списка.
        :param text: название выбранного пункта списка.
        :return: None
        """
        print(text)  # печать текстового названия выбранного пункта списка


def main() -> None:
    """
    Функция запуска кода верхнего уровня приложения.
    :return:
    """
    app = QApplication(sys.argv)  # создание экземпляра основного цикла событий приложения
    window = MainWidow()  # создание экземпляра подкласса главного окна приложения
    window.show()  # # Метод вывода главного окна приложения. По умолчанию окно скрыто.
    app.exec()  # запуск основного цикла событий главного окна приложения
    # Код ниже метода запуска цикла событий не будет достигнут и выполнен пока не будет выполнен
    # выход и цикл событий не будет остановлен.


if __name__ == '__main__':  # данное условие предотвращает запуск кода верхнего уровня модуля при его импортировании
    main()  # вызов функции запуска кода верхнего уровня
