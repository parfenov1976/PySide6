"""
Листинг 18.1. Первая программа. Изменено имя файла для обеспечения соответствия требованиям
к именам модулей
"""
import sys
from PySide6.QtWidgets import (QApplication,
                               QMainWindow,
                               QWidget,
                               QLabel,
                               QPushButton,
                               QVBoxLayout,
                               )

"""
Импорт модуля sys, предоставляющего доступ к объекта интерпретатора, нужен для доступа
к аргументам командной строки. Если использование аргументов командной строки не предполагается,
то импорт можно не выполнять. При этом, при создании приложения в класс QtWidgets.QApplication([])
в качестве аргумента передается пустой.

Импорт из модуля PySide6.QWidgets класса управления приложением QApplication, класса базового виджета QWidget,
класса главных окон QMainWindow, класса ярлыка QLabel, класса кнопок QPushButton, класса контейнера
с вертикальным расположение виджетов QVBoxLayout.
"""


class MainWindow(QMainWindow):
    """
    Класс главного окна приложения от супер класса главных окон
    """

    def __init__(self):
        """
        Конструктор главного окна приложения
        """
        QMainWindow.__init__(self)  # явный вызов конструктора родительского класса

        self.setWindowTitle('Первая программа')  # установка заголовка главного окна
        self.label = QLabel('<center>Привет, мир!</center>')  # создание ярлыка с надписью
        self.btn_quit = QPushButton('&Закрыть окно')  # создание кнопки
        self.btn_quit.clicked.connect(quit)  # создание сигнала на клик по кнопке с привязкой встроенного
        # метода на выход
        self.vbox = QVBoxLayout()  # создание слоя для виджетов с вертикальным расположением
        self.widget = QWidget()  # создание контейнера для слоев с виджетами
        self.vbox.addWidget(self.label)  # размещение ярлыка в контейнере для виджетов
        self.vbox.addWidget(self.btn_quit)  # размещение кнопки в контейнере для виджетов
        self.widget.setLayout(self.vbox)  # размещение контейнера для виджетов в главном окне приложения
        self.setCentralWidget(self.widget)  # размещение контейнера для слоев в главном окне приложения


if __name__ == '__main__':  # условие для предотвращения запуска кода верхнего уровня при импортировании данного модуля
    app = QApplication(sys.argv)  # создание основного цикла событий главного окна
    app.setStyle('Fusion')  # более интересная глобальная кроссплатформенна тема Fusion
    window = MainWindow()  # создание экземпляра главного окна приложения
    window.resize(300, 70)  # установка размеров окна по умолчанию
    window.show()  # Метод для вывода главного окна. По умолчанию окно спрятано.
    sys.exit(app.exec())  # Запуск основного цикла событий главного окна приложения.
    # Код ниже метода запуска цикла событий не будет достигнут и выполнен пока не будет выполнен
    # выход и цикл событий не будет остановлен. Не обязательно оборачивать запуск цикла в метод sys.exit()
