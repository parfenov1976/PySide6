"""
Работа с графикой. Класс QPainter

Класс QPainter содержит все необходимые средства, позволяющие выполнять рисование
геометрических фигур и вывод текста на поверхности, реализуемой классом QPaintDevice.
Класс QPaintDevice наследуют классы QWidget, QPicture, QPixmap, QImage,
QPagedPaintDevice и некоторые дРУГИе. Это дает возможность рисовать на поверхности любого
компонента, на изображении или на печатаемой странице. Форматы конструктора
класса:

QPainter()
QPainter(<Поверхность рисования>)

Первый формат создает объект, который не подключен ни к одной поверхности рисования.
Чтобы подключиться к поверхности и захватить контекст рисования, необходимо вызвать
метод begin(<Поверхность>) и передать ему ссылку на объект класса, производного от
QPaintDevice. Метод возвращает значение True, если контекст успешно захвачен, и False -
в противном случае. В один момент времени только один объект может рисовать на поверхности,
поэтому после окончания рисования необходимо освободить контекст рисования
с помощью метода end(). С учетом сказанного код, позволяющий рисовать на компоненте,
будет выглядеть так:

def paintEvent(self, е):
    # Компонент, на котором выполняется рисование, передается в параметре self
    painter = QtGui.QPainter()
    painter.begin(self)
    # Здесь производим рисование на компоненте
    painter.end()

Второй формат принимает поверхность рисования, которая задана в виде объекта класса,
производного от QPaintDevice, подключается к этой поверхности и сразу захватывает контекст
рисования. Контекст рисования автоматически освобождается внутри деструктора
класса QPainter при уничтожении объекта. Так как объект автоматически уничтожается при
выходе из метода paintEvent(), то метод end() можно и не вызывать.
Вот пример рисования на компоненте:

def paintEvent(self, е):
    painter = QtGui.QPainter(self)
    # Здесь производим рисование на компоненте

Проверить успешность захвата контекста рисования можно с помощью метода isActive ():
он возвращает значение True, если контекст захвачен, и False - в противном случае.
"""

# демонстрация данного класса есть во всех примерах кода данного раздела
