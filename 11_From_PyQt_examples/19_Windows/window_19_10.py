"""
Пример создания окна произвольной формы

Чтобы создать окно произвольной формы, нужно выполнить следующие шаги:
1. Создать изображение нужной формы с прозрачным фоном и сохранить его, например, в формате PNG.
2. Создать объект класса QPixmap, передав конструктору класса путь к файлу с ранее созданным изображением.
3. Установить изображение в качестве фона окна с помощью палитры.
   Если для создания окна используется класс надписи QLabel, то установить изображение
   в качестве фона можно вызовом метода setPixmap(<Изображение QPixmap>) надписи.
4. Создать на основе изображения битовую маску с помощью метода mask() класса QPixmap.
5. Применить полученную маску к окну, вызвав у него метод setMask(<Маска>).
6. Убрать рамку у окна, например, передав комбинацию следующих элементов перечисления WindowТype:
QtCore.Qt.WindowТype.Window | QtCore.Qt.WindowТype.FramelessWindowHint
"""

import sys
import os
from PySide6.QtWidgets import (QApplication,
                               QMainWindow,
                               QPushButton,
                               )
from PySide6.QtCore import Qt
from PySide6.QtGui import (QPixmap,
                           QPalette,
                           QBrush,
                           )

"""
Импорт модуля sys, предоставляющего доступ к объекта интерпретатора, нужен для доступа
к аргументам командной строки. Если использование аргументов командной строки не предполагается,
то импорт можно не выполнять. При этом, при создании приложения в класс QtWidgets.QApplication([])
в качестве аргумента передается пустой.

Модуль os для извлечения путей операционной системы и работы с путями.

Импорт из модуля PySide6.QWidgets класса управления приложением QApplication, класса главных окон QMainWindow,
класса виджета кнопки QPushButton

Импорт из модуля PySide6.QtCore класса аттрибутов для настройки и управления виджетами Qt.

Импорт из модуля PySide6.QtGui класса палитр QPalette,класса кистей QBrush,
класса работы с изображениями QPixmap
"""

base = os.path.dirname(__file__)  # извлечение абсолютного пути к данному модулю


class MainWindow(QMainWindow):
    """
    Класс главного окна приложения от супер класса главных окон
    """

    def __init__(self, parent=None) -> None:
        """
        Конструктор главного окна приложения
        """
        QMainWindow.__init__(self, parent)  # явный вызов конструктора родительского класса
        self.setWindowTitle('Создание окна произвольной формы')  # установка заголовка главного окна
        self.setWindowFlag(Qt.WindowType.Window | Qt.WindowType.FramelessWindowHint)
        # создание окна без рамки и заголовка
        self.resize(600, 600)  # установка исходного размера окна
        self.picture = QPixmap(os.path.join(base, 'data', 'circle.png'))  # создание объекта изображения
        pal = self.palette()  # извлечение палитры окна
        pal.setBrush(QPalette.ColorGroup.Normal, QPalette.ColorRole.Window, QBrush(self.picture))
        pal.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.Window, QBrush(self.picture))
        # установка заготовленного изображения в качестве фона окна
        self.setPalette(pal)  # применение измененной палитры окна
        self.setMask(self.picture.mask())  # создание битовой маски на основе объекта изображения
        self.btn = QPushButton('Закрыть окно', self)  # создание кнопки на закрытие окна
        self.btn.setFixedSize(150, 30)  # установка размера кнопки
        self.btn.move(225, 285)  # установка смещения кнопки от левого верхнего угла окна
        self.btn.clicked.connect(QApplication.instance().quit)  # привязка обработчика сигнала на выход из цикла событий


if __name__ == '__main__':  # проверка условия запуска данного файла для предотвращения запуска кода верхнего уровня
    # при импортировании данного файла как модуля
    app = QApplication(sys.argv)  # создание основного цикла событий приложения
    app.setStyle('Fusion')  # установка более красивого стиля графического интерфейса
    window = MainWindow()  # создание главного окна приложения
    window.show()  # вывод окна на экран, по умолчанию окно спрятано
    sys.exit(app.exec())  # Запуск основного цикла событий приложения.
    # Код ниже метода запуска цикла событий не будет достигнут и выполнен пока не будет выполнен
    # выход и цикл событий не будет остановлен. Не обязательно оборачивать запуск цикла в метод sys.exit()
