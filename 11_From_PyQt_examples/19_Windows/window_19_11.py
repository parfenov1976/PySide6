"""
Пример внедрение в приложение всплывающих и расширенных подсказок

Всплывающая подсказка содержит справочную информацию о каком-либо компоненте и выводится
на экран при наведении курсора мыши на этот компонент.
Расширенная подсказка по компоненту выводится после нажатия кнопки вывода справки в заголовке
диалогового окна и щелчка мышью на этом компоненте, также можно сделать компонент активным
нажатием комбинации клавиш <Shift>+<Fl>.
Для создания всплывающих подсказок и управления ими служат следующие методы класса QWidget:
- setToolTip(<Текст>) - задает текст всплывающей подсказки. В качестве параметра можно
  указать простой текст или НТМL-код. Чтобы отключить вывод подсказки, достаточно передать
  в этот метод пустую строку;
- toolTip() - возвращает текст всплывающей подсказки;
- setToolTipDuration(<Время>) - задает время, в течение которого всплывающая подсказка
  будет присутствовать на экране, в миллисекундах. Если задать значение -1, PyQt будет сама
  вычислять необходимое время, основываясь на длине текста подсказки (поведение по умолчанию);
- toolTipDuration()- возвращает время, в течение которого всплывающая подсказка будет
  присутствовать на экране;
- setWhatsThis(<Текст>) - задает текст расширенной подсказки. В качестве параметра можно указать
  простой текст или НТМL-код. Чтобы отключить вывод подсказки, достаточно передать в этот
  метод пустую строку;
- whatsThis() - возвращает текст расширенной подсказки.
"""

import sys
from PySide6.QtWidgets import (QApplication,
                               QMainWindow,
                               QPushButton,
                               )
from PySide6.QtCore import Qt

"""
Импорт модуля sys, предоставляющего доступ к объекта интерпретатора, нужен для доступа
к аргументам командной строки. Если использование аргументов командной строки не предполагается,
то импорт можно не выполнять. При этом, при создании приложения в класс QtWidgets.QApplication([])
в качестве аргумента передается пустой.

Импорт из модуля PySide6.QWidgets класса управления приложением QApplication, класса главных окон QMainWindow,
класса виджета кнопки QPushButton

Импорт из модуля PySide6.QtCore класса аттрибутов для настройки и управления виджетами Qt.
"""


class MainWindow(QMainWindow):
    """
    Класс главного окна приложения от супер класса главных окон
    """

    def __init__(self, parent=None) -> None:
        """
        Конструктор главного окна приложения
        """
        QMainWindow.__init__(self, parent)  # явный вызов конструктора родительского класса
        self.setWindowTitle('Всплывающие и расширенные подсказки')  # установка заголовка окна
        self.setWindowFlag(Qt.WindowType.Dialog | Qt.WindowType.WindowContextHelpButtonHint)
        # установка флагов окна
        self.resize(300, 300)  # установка исходного размера окна
        self.btn = QPushButton('Закрыть окно', self)  # создание виджета кнопки с указанием родительского объекта
        self.btn.setFixedSize(150, 30)  # установка размеров кнопки
        self.btn.move(75, 135)  # смещение кнопки относительно левого верхнего угла окна
        self.btn.setToolTip('Всплывающая подсказка для кнопки')  # установка текса всплывающей подсказки для кнопки
        self.btn.setToolTipDuration(3000)  # установка длительности показа подсказки
        self.setToolTip('Всплывающая подсказка для окна')  # установка текста всплывающей подсказки для окна
        self.setToolTipDuration(3000)  # установка длительности показа подсказки
        self.btn.setWhatsThis('Расширенная подсказка для кнопки')  # установка текста расширенной подсказки
        self.setWhatsThis('Расширенная подсказка для окна')  # установка текста расширенной подсказки
        self.btn.clicked.connect(QApplication.instance().quit)  # привязка обработчика сигнала на выход из цикла событий


if __name__ == '__main__':  # проверка условия запуска данного файла для предотвращения запуска кода верхнего уровня
    # при импортировании данного файла как модуля
    app = QApplication(sys.argv)  # создание основного цикла событий приложения
    app.setStyle('Fusion')  # установка более красивого стиля графического интерфейса
    window = MainWindow()  # создание главного окна приложения
    window.show()  # вывод окна на экран, по умолчанию окно спрятано
    sys.exit(app.exec())  # Запуск основного цикла событий приложения.
    # Код ниже метода запуска цикла событий не будет достигнут и выполнен пока не будет выполнен
    # выход и цикл событий не будет остановлен. Не обязательно оборачивать запуск цикла в метод sys.exit()
