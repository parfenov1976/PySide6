"""
Списки и таблицы. Управление выделением элементов

Класс QItemSelectionModel, определенный в модуле QtCore, реализует модель, позволяющую
централизованно управлять выделением сразу в нескольких представлениях. Установить
модель выделения позволяет метод setSelectionModel() класса QAbstractItemView, а
получить ссылку на модель можно с помощью метода selectionModel(). Если одна модель
выделения установлена сразу в нескольких представлениях, то выделение элемента в одном
представлении приведет к выделению соответствующего элемента в другом представлении.
Иерархия наследования выглядит так:
QObject - QItemSelectionModel
Форматы конструктора класса QItemSelectionModel:
QItemSelectionModel([<Модель>])
QItemSelectionModel(<Модель>, <Родитель>)
Класс QItemSelectionModel поддерживает следующие полезные методы (полный их список
можно найти на странице https://doc.qt.io/qt-6/qitemselectionmodel.html):
♦ hasSelection() - возвращает значение True, если существует выделенный элемент,
  и False - в противном случае;
♦ isSelected(<Индекс QModelIndex>) - возвращает значение True, если элемент с указанным
  индексом выделен, и False - в противном случае;
♦ isRowSelected(<Индекс> [, <Индекс родителя QModelIndex>]) - возвращает значение
  True, если строка с указанными индексом и индексом родителя выделена, и False - в противном
  случае. Если индекс родителя не указан, проверяется строка верхнего уровня иерархии;
♦ isColumnSelected(<Индекс> [, <Индекс родителя QModelindex>]) - возвращает значение
  True, если столбец с указанными индексом и индексом родителя выделен, и False -
  в противном случае. Если индекс родителя не указан, проверяется столбец верхнего уровня
  иерархии;
♦ rowIntersectsSelection(<Индекс>[, <Индекс родителя QModelIndex>]) - возвращает
  значение True, если строка с указанными индексом и индексом родителя содержит выделенный
  элемент, и False - в противном случае. Если индекс родителя не указан, проверяется
  строка верхнего уровня иерархии;
♦ columnIntersectsSelection(<Индекс>[, <Индекс родителя QModelIndex>]) - возвращает
  значение True, если столбец с указанными индексом и индексом родителя содержит
  выделенный элемент, и False - в противном случае. Если индекс родителя не указан,
  проверяется столбец верхнего уровня иерархии;
♦ selectedIndexes() - возвращает список индексов (объектов класса QModelIndex) выделенных
элементов или пустой список, если выделенных элементов нет;
♦ selectedRows([<Индекс столбца>=0]) - возвращает СПИСОК индексов(объектов класса
  QModelIndex) выделенных элементов из указанного столбца. Элемент попадет в список
  только в том случае, если строка выделена полностью;
♦ selectedColumns([<Индекс 􀂶троки>=0]) - возвращает список индексов (объектов класса
  QModelIndex) выделенных элементов из указанной строки. Элемент попадет в список
  только в том случае, если столбец выделен полностью;
♦ selection() - возвращает ссылку на объект класса QItemSelection;
♦ select (<Индекс QModelIndex>, <Режим>) -изменяет выделение элемента с указанным
индексом. Во втором параметре указываются следующие элементы (или их комбинация
через оператор |) перечисления SelectionFlag из класса QItemSelectionModel:
  • NoUpdate - без изменений;
  • Clear - снимает выделение всех элементов;
  • Select - выделяет элемент;
  • Deselect - снимает выделение с элемента;
  • Toggle - выделяет элемент, если он не выделен, или снимает выделение, если элемент
    был выделен;
  • Current - обновляет выделение текущего элемента;
  • Rows - индекс будет расширен так, чтобы охватить всю строку;
  • Columns - индекс будет расширен так, чтобы охватить весь столбец;
  • SelectCurrent - комбинация Select | Current;
  • ToggleCurrent - комбинация Toggle | Current;
  • ClearAndSelect - комбинация Clear | Select.
  Метод является слотом;
♦ select (<Выделение QItemSelection>, <Режим>) - задает новое выделение элементов.
  Метод является слотом;
♦ setCurrentIndex(<Индекс QModelindex>, <Режим>) - делает элемент с заданным индексом
  текущим и изменяет режим выделения. Метод является слотом;
♦ currentIndex() -возвращает индекс (объект класса QModelindex) текущего элемента;
♦ clearSelection() -снимает все выделения. Метод является слотом.
Класс QItemSelectionModel поддерживает следующие сигналы:
♦ currentChanged(<Предыдущий индекс>, <Новый индекс>) - генерируется при выделении
  другого элемента. Внутри обработчика через первый параметр доступен индекс ранее
  выделенного элемента, а через второй - индекс вновь выделенного элемента(объекты
  класса QModelIndex);
♦ currentRowChanged(<Предыдущий индекс>, <Новый индекс>) - генерируется при выделении
  элемента из другой строки. Внутри обработчика через первый параметр доступен
  индекс предыдущего элемента, а через второй - индекс нового элемента (объекты класса
  QModelIndex);
♦ currentColumnChanged(<Предыдущий индекс>, <Новый индекс>) - генерируется при выделении
  элемента из другого столбца. Внутри обработчика через первый параметр доступен
  индекс предыдущего элемента, а через второй индекс нового элемента (объекты
  класса QModelIndex);
♦ selectionChanged(<Предыдущее выделение>, <Новое выделение>) - генерируется при
  изменении выделения. Внутри обработчика через первый параметр доступно предыдущее
  выделение, а через второй - новое выделение (объекты класса QItemSelection).
"""

# TODO придумать пример
