"""
Модели. Доступ к данным внутри модели

Доступ к данным внутри модели реализуется с помощью класса QModelIndex из модуля
QtCore.
Чаще всего объект класса QModelIndex создается с помощью метода index() какого-либо
класса модели или метода currentIndex(), унаследованного моделями из класса
QAbstractItemView. Такой объект указывает на конкретные данные.
Если запрошенных данных в модели нет, возвращается пустой, невалидный объект класса
QModelIndex. Его.также можно создать обычным вызовом конструктора:
QModelIndex()

Класс QModelIndex поддерживает следующие методы:
♦ isValid() - возвращает значение True, если объект является валидным, и False -
  в противном случае;
♦ data([role=ItemDataRole.DisplayRoleJ) - возвращает данные, относящиеся к указанной
  в параметре role роли (по умолчанию - выводимый на экран текст элемента
  списка);
♦ flags() - возвращает свойства элемента в виде комбинации следующих элементов
  перечисления ItemFlag из модуля QtCore.Qt:
  • NoItemFlags - элемент не имеет свойств;
  • ItemIsSelectable - элемент можно выделить;
  • ItemIsEditable - элемент можно редактировать;
  • ItemIsDragEnabled· - элемент можно перетаскивать;
  • ItemIsDropEnabled - в элемент можно сбрасывать перетаскиваемые данные;
  • ItemIsUserCheckable - элемент может быть установлен и сброшен;
  • ItemIsEnabled - пользователь может взаимодействовать с элементом;
  • ItemIsAutoTristate - состояние элемента зависит от состояния вложенных в него
    элементов (например, родительский элемент устанавливается, если все вложенные
    в него элементы установлены, и частично устанавливается, если установлена лишь
    часть вложенных элементов);
  • ItemNeverHasChildren - элемент не может иметь вложенные элементы;
  • ItemIsUserTristate - элемент может находиться в трех состояниях (сброшенном,
    частично установленном и установленном);
♦ row() - возвращает индекс строки;
♦ column() - возвращает индекс столбца;
♦ parent() - возвращает индекс элемента (объект класса QModelIndex), расположенного
  на один уровень выше по иерархии. Если такого элемента нет, возвращается невалидный
  объект класса QModelindex;
♦ sibling(<Строка>, <Столбец>) - возвращает индекс элемента (объект класса
  QModelIndex), расположенного на том же уровне вложенности на указанных строке и
  столбце. Если такого элемента нет, возвращается невалидный объект класса QModelindex;
♦ siblingAtRow(<Строка>) - возвращает индекс элемента (объект класса QModelIndex),
  расположенного на том же уровне вложенности на указанной строке. Если такого элемента
  нет, возвращается невалидный объект класса QModelIndex;
♦ siblingAtColumn(<Столбец>) - возвращает индекс элемента (объект класса QModelIndex),
  расположенного на том же уровне вложенности на указанном столбце. Если такого элемента
  нет, возвращается невалидный объект класса QModelIndex;
♦ model() - возвращает ссылку на модель.
Также класс QModelIndex поддерживает операторы сравнения ==, < и !=.
Надо учитывать, что модель может измениться - тогда объект класса QModelIndex будет
ссылаться на уже несуществующий элемент. Если необходимо сохранить ссылку на элемент,
следует воспользоваться классом QPersistentModelindex, который содержит те же
самые методы, но обеспечивает валидность ссылки.
"""

# Нет специального примера. См примеры применения в примерах с моделями
