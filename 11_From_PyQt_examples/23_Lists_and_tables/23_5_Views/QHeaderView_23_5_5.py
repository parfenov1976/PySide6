"""
Представления. Управление заголовками строк и столбцов

Класс QHeaderView представляет заголовки строк и столбцов в компонентах QTableView и
QTreeView. Получить ссылки на заголовки в классе QTableView позволяют методы
horizontalHeader() и verticalHeader(), а для установки заголовков предназначены методы
setHorizontalHeader() и setVerticalHeader(). Получить ссылку на заголовок в классе
QTreeView позволяет метод header(), а для установки заголовка предназначен метод
setHeader(). Иерархия наследования:
(QObject, QPaintDevice) - QWidget - QFrame - QAbstractScrollArea -
QAbstractItemView - QHeaderView
Формат конструктора класса QHeaderView:
QHeaderView(<Ориентация>[, parent=None])
В качестве ориентации указываются элементы Horizontal(горизонтальная) или Vertical
(вертикальная) перечисления Orientation из модуля QtCore.Qt.
Класс QHeaderView наследует все методы и сигналы класса QAbstractItemView
(см. QAbstractItemView_23_5_1.py) и дополнительно определяет следующие основные методы
(полный их список можно найти на странице https://doc.qt.io/qt-6/qheaderview.html):
♦ count() - возвращает количество секций в заголовке. Получить количество секций
  можно также с помощью функции len();
♦ setDefaultSectionSize(<Размер>) - задает размер секций по умолчанию;
♦ defaultSectionSize() - возвращает размер секций по умолчанию;
♦ setMinimumSectionSize(<Размер>) - задает минимальный размер секций;
♦ minimumSectionSize() - возвращает минимальный размер секций;
♦ setMaximumSectionSize(<Размер>) - задает максимальный размер секций;
♦ maximumSectionSize() -возвращает максимальный размер секций;
♦ resizeSection(<Индекс>, <Размер>) - задает новый размер у секции с указанным индексом;
♦ sectionSize(<Индекс>) - возвращает размер секции с указанным индексом;
♦ setSectionResizeMode(<Режим>) - задает режим изменения размеров у всех секций.
  В качестве параметра могут быть указаны следующие элементы перечисления
  ResizeMode из класса QHeaderView:
  • Interactive - размер может быть изменен пользователем или программно;
  • stretch -секции равномерно распределяют свободное пространство между собой.
    Размер не может быть изменен ни пользователем, ни программно;
  • Fixed - размер может быть изменен только программно;
  • ResizeToContents - размер определяется автоматически по содержимому секции.
    Размер не может быть изменен ни пользователем, ни программно;
♦ setSectionResizeMode(<Индекс>, <Режим>) - задает режим изменения размеров у секции
  с указанным индексом;
♦ setStretchLastSection(<Флаг>) - если в качестве параметра указано значение True,
  последняя секция будет занимать все оставшееся свободное пространство;
♦ setCascadingSectionResizes(<Флаг>) - если в качестве параметра указано значение
  True, изменение размеров одной секции может привести к изменению размеров других
  секций;
♦ setSectionHidden(<Индекс>, <Флаг>) - если во втором параметре указано значение
  True, секция с индексом, указанным в первом параметре, будет скрыта. Значение False
  отображает секцию;
♦ hideSection(<Индекс>) - скрывает секцию с указанным индексом;
♦ showSection(<Индекс>) - отображает секцию с указанным индексом;
♦ isSectionHidden(<Индекс>) - возвращает значение True, если секция с указанным индексом
  скрыта, и False - в противном случае;
♦ sectionsHidden() - возвращает значение True, если существует хотя бы одна скрытая
  секция, и False - в противном случае;
♦ hiddenSectionCount() - возвращает количество скрытых секций;
♦ setDefaultAlignment(<Выравнивание>) - задает выравнивание текста внутри заголовков
  в виде элемента перечисления AlignmentFlag из модуля QtCore.Qt;
♦ setHighlightSections(<Флаг>) - если в качестве параметра указано значение True, то
  текст заголовка текущей секции будет выделен;
♦ setSectionsClickable(<Флаг>) - если в качестве параметра указано значение True, заголовок
  будет реагировать на щелчок мышью, при этом выделяя все элементы секции;
♦ setSectionsMovable(<Флаг>) - если в качестве параметра указано значение True, пользователь
  может перемещать секции с помощью мыши;
♦ sectionsMovable() - возвращает значение True, если пользователь может перемещать
  секции с помощью мыши, и False - в противном случае;
♦ moveSection(<Откуда>, <Куда>) - позволяет переместить секцию. В параметрах указываются
  визуальные индексы;
♦ swapSections(<Секция 1>, <Секция 2>) - меняет две секции местами. В параметрах
  указываются визуальные индексы;
♦ visualIndex(<Логический индекс>) - преобразует логический индекс (первоначальный
  порядок следования) в визуальный (отображаемый в настоящее время порядок следования).
  Если преобразование прошло неудачно, возвращается значение -1;
♦ logicalIndex(<Визуальный индекс>) - преобразует визуальный индекс (отображаемый
  в настоящее время порядок следования) в логический (первоначальный порядок следования).
  Если преобразование прошло неудачно, возвращается значение -1;
♦ saveState() - возвращает объект класса QByteArray с текущими размерами и положением
  секций;
♦ restoreState(<Объект QByteArray>) - восстанавливает размеры и положение секций на
  основе заданного объекта класса QByteArray, возвращаемого методом saveState().
Класс QHeaderView поддерживает следующие сигналы (здесь приведены только основные -
полный их список можно найти на странице https://doc.qt.io/qt-6/qheaderview.html):
♦ sectionPressed(<Логический индекс>) - генерируется при нажатии левой кнопки мыши
  над заголовком секции. Внутри обработчика через параметр доступен целочисленный
  логический индекс секции;
♦ sectionClicked(<Логический индекс>) - генерируется при нажатии и отпускании левой
  кнопки мыши над заголовком секции. Внутри обработчика через параметр доступен
  целочисленный логический индекс секции;
♦ sectionDoubleClicked(<Логический индекс>) - генерируется при двойном щелчке
  мышью на заголовке секции. Внутри обработчика через параметр доступен целочисленный
  логический индекс секции;
♦ sectionMoved(<Логический индекс>, <Старый визуальный индекс>, <Новый визуальный
  индекс>) - генерируется при изменении положения секции. Все параметры целочисленные;
♦ sectionResized(<Логический индекс>, <Старый размер>, <Новый размер>) - генерируется
  непрерывно при изменении размера секции. Все параметры целочисленные.
"""

# TODO придумать пример
